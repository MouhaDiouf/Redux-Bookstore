{"version":3,"sources":["components/Book.js","components/CategoryFilter.js","containers/BooksList.js","actions/index.js","containers/BooksForm.js","App.js","reducers/books.js","reducers/filter.js","reducers/index.js","index.js"],"names":["Book","title","category","handleRemoveBook","id","className","type","onClick","CategoryFilter","props","state","selectValue","this","handleFilter","name","onChange","e","setState","target","value","map","key","Math","random","React","Component","library","add","faUser","connect","filterReducer","booksReducer","books","showCategories","dispatch","book","handleFilterChange","filter","icon","index","order","BooksForm","handleChange","bind","tagName","addBook","required","placeholder","preventDefault","params","document","querySelector","createBook","App","defaultState","action","combineReducers","WebFont","load","google","families","store","createStore","reducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.819d6017.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Book.css';\n\nconst Book = ({\n  title, category, handleRemoveBook, id,\n}) => (\n  <>\n    <tr className=\"Book\">\n      <td className=\"bookCategory\">{category}</td>\n      <td className=\"bookTitle\">{title}</td>\n      <td>\n        <button\n          type=\"button\"\n          className=\"removeBook\"\n          onClick={() => handleRemoveBook(id)}\n        >\n          REMOVE BOOK\n        </button>\n      </td>\n    </tr>\n  </>\n);\n\nBook.propTypes = {\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  handleRemoveBook: PropTypes.func.isRequired,\n};\nexport default Book;\n","import React from 'react';\nimport './CategoryFilter.css';\nimport PropTypes from 'prop-types';\n\nclass CategoryFilter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectValue: 'All',\n    };\n  }\n\n  render() {\n    const { handleFilter, state } = this.props;\n    const { selectValue } = this.state;\n    const categories = [\n      'Action',\n      'Biography',\n      'History',\n      'Horror',\n      'Kids',\n      'Learning',\n      'Sci-Fi',\n      'Fiction',\n      'Non Fiction',\n      'All',\n    ];\n\n    const handleSelect = e => {\n      this.setState({\n        selectValue: e.target.value,\n      });\n      handleFilter(e.target.value, state);\n    };\n    return (\n      <div className=\"CategoryFilter\">\n        <select\n          name=\"categories\"\n          onChange={handleSelect}\n          value={selectValue}\n          className=\"filter\"\n        >\n          {categories.map(category => (\n            <option key={Math.random()} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nCategoryFilter.propTypes = {\n  handleFilter: PropTypes.func.isRequired,\n  state: PropTypes.instanceOf(Object).isRequired,\n};\nexport default CategoryFilter;\n","import React from 'react';\nimport './BooksList.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Book from '../components/Book';\nimport { removeBook, handleFilter } from '../actions';\nimport CategoryFilter from '../components/CategoryFilter';\n\nlibrary.add(faUser);\n\nconst BooksList = ({\n  books, handleRemoveBook, state, handleFilterChange,\n}) => (\n  <div>\n    <ul>\n      <li>Bookstore CMS</li>\n      <li className=\"books\">BOOKS</li>\n      <span>Filter by category</span>\n      <li className=\"categories\">\n        <CategoryFilter state={state} handleFilter={handleFilterChange} />\n      </li>\n      <li className=\"user\">\n        <FontAwesomeIcon icon=\"user\" />\n      </li>\n    </ul>\n\n    <table className=\"responsive-table highlight centered\">\n      <tbody>\n        {books.map((book, index) => (\n          <Book\n            title={book.title}\n            id={book.id}\n            category={book.category}\n            order={index + 1}\n            key={book.id}\n            handleRemoveBook={handleRemoveBook}\n          />\n        ))}\n      </tbody>\n    </table>\n  </div>\n);\n\nBooksList.propTypes = {\n  books: PropTypes.instanceOf(Array).isRequired,\n  handleRemoveBook: PropTypes.func.isRequired,\n  state: PropTypes.instanceOf(Object).isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n};\n/* eslint-disable */\nconst mapStateToProps = ({ filterReducer, booksReducer }) => {\n  let books;\n  if (filterReducer.books) {\n    books = filterReducer.books;\n  } else {\n    books = booksReducer.books;\n  }\n  return {\n    books,\n    state: booksReducer,\n    showCategories: false\n  };\n};\n/* eslint-enable */\nconst mapDispatchToProps = dispatch => ({\n  handleRemoveBook: book => {\n    dispatch(removeBook(book));\n  },\n  handleFilterChange: (filter, state) => {\n    dispatch(handleFilter(filter, state));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);\n","export const CREATE_BOOK = 'CREATE_BOOK';\nexport const REMOVE_BOOK = 'REMOVE_BOOK';\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\n\nexport const createBook = book => ({\n  type: CREATE_BOOK,\n  book,\n});\n\nexport const removeBook = id => ({\n  type: REMOVE_BOOK,\n  id,\n});\n\n\nexport const handleFilter = (filter, state) => ({\n  type: CHANGE_FILTER,\n  filter,\n  state,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './BooksForm.css';\nimport { connect } from 'react-redux';\nimport { createBook } from '../actions/index';\n\nclass BooksForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      category: 'Action',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    if (e.target.tagName === 'INPUT') {\n      this.setState({\n        title: e.target.value,\n      });\n    }\n    if (e.target.tagName === 'SELECT') {\n      this.setState({\n        category: e.target.value,\n      });\n    }\n  }\n\n  render() {\n    const { addBook } = this.props;\n    const { title, category } = this.state;\n    const handleSubmit = e => {\n      e.preventDefault();\n      const params = { ...this.state, id: Math.random() };\n      document.querySelector('input').value = '';\n      this.setState({\n        title: '',\n      });\n      if (params.title) addBook(params);\n    };\n\n    const categories = [\n      'Action',\n      'Biography',\n      'History',\n      'Horror',\n      'Kids',\n      'Learning',\n      'Sci-Fi',\n    ];\n    return (\n      <div className=\"BooksForm\">\n        <form>\n          <h2 className=\"title\">ADD NEW BOOK</h2>\n          <input\n            type=\"text\"\n            required\n            placeholder=\"Add Your Book\"\n            className=\"addBookInput\"\n            onChange={this.handleChange}\n            value={title}\n          />\n          <select\n            name=\"categories\"\n            className=\"selectCategory\"\n            onChange={this.handleChange}\n            value={category}\n          >\n            {categories.map(category => (\n              <option key={Math.random()} value={category}>\n                {category}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"submit\"\n            value=\"ADD BOOK\"\n            className=\"addBookButton\"\n            onClick={handleSubmit}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nBooksForm.propTypes = {\n  addBook: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addBook: book => {\n    dispatch(createBook(book));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n","import React from 'react';\nimport BooksList from './containers/BooksList';\nimport BooksForm from './containers/BooksForm';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BooksList />\n      <BooksForm />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/index';\n\nconst defaultState = {\n  books: [\n    { title: 'Harry Potter', category: 'Fiction', id: Math.random() },\n    { title: 'How To Win Friends', category: 'Non Fiction', id: Math.random() },\n    { title: 'The Prince', category: 'Non Fiction', id: Math.random() },\n  ],\n};\n\nconst booksReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CREATE_BOOK:\n      return {\n        ...state,\n        books: [...state.books, action.book],\n      };\n\n    case actionTypes.REMOVE_BOOK:\n      return {\n        ...state,\n        books: state.books.filter(book => book.id !== action.id),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default booksReducer;\n","import { CHANGE_FILTER } from '../actions/index';\n\nconst defaultState = {\n  filter: 'All',\n};\n\nconst filterReducer = (state = defaultState, action) => {\n  if (action.type === CHANGE_FILTER) {\n    if (action.filter === 'All') {\n      return {\n        ...action.state,\n        books: action.state.books,\n        filter: action.filter,\n      };\n    }\n    return {\n      ...action.state,\n      books: action.state.books.filter(book => book.category === action.filter),\n      filter: action.filter,\n    };\n  }\n\n  return state;\n};\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport books from './books';\nimport filterReducer from './filter';\n\nexport default combineReducers({\n  booksReducer: books,\n  filterReducer,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WebFont from 'webfontloader';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport reducer from './reducers/index';\n\nWebFont.load({\n  google: {\n    families: ['sans-serif', 'Roboto Slab', 'Montserrat'],\n  },\n});\n\nconst store = createStore(reducer);\nReactDOM.render(\n  <Provider store={store} className=\"hello\">\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}